import numpy as npimport cv2import structimport subprocessimport systhreshold = int(sys.argv[4])subprocess.run(["ffmpeg", "-y", "-i", r".\video\BadApple.mp4", "-s", sys.argv[1] + ":" + sys.argv[2], "-c:a", "copy", r".\video\BadAppleResized.mp4"]) subprocess.run(["ffmpeg", "-y", "-i", r".\video\BadAppleResized.mp4", "-filter:v", "fps=" + sys.argv[3], r".\video\BadAppleFinal.mp4"]) # Load the videocap = cv2.VideoCapture(r".\video\BadAppleFinal.mp4")# Open a binary file for writingwith open(r".\video\binary_video.bin", "wb") as f:    # Loop through each frame of the video    while(cap.isOpened()):        ret, frame = cap.read()        if ret == False:            break        # Convert the frame to grayscale        gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)        # Convert the grayscale image to binary values        binary = np.zeros_like(gray)        binary[gray >= int(threshold)] = 1 #For darker videos, lower value (prob like 64) orig 128        # Write the binary values to the binary file        binary_data = struct.pack("{}B".format(binary.size), *binary.flatten().tolist())        f.write(binary_data)# Release the video capturecap.release()